"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts,import_extension="
// @generated from file chains/tron/protos/tron.proto (package protocol, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Transaction_raw = exports.Transaction_Contract_ContractType = exports.Transaction_Contract = exports.Transaction = exports.authority = exports.AccountId = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * AccountId, (name, address) use name, (null, address) use address, (name, null) use name,
 *
 * @generated from message protocol.AccountId
 */
class AccountId extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bytes name = 1;
         */
        this.name = new Uint8Array(0);
        /**
         * @generated from field: bytes address = 2;
         */
        this.address = new Uint8Array(0);
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountId().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountId().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountId().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AccountId, a, b);
    }
}
AccountId.runtime = protobuf_1.proto3;
AccountId.typeName = "protocol.AccountId";
AccountId.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "address", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
exports.AccountId = AccountId;
/**
 * @generated from message protocol.authority
 */
class authority extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bytes permission_name = 2;
         */
        this.permissionName = new Uint8Array(0);
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new authority().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new authority().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new authority().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(authority, a, b);
    }
}
authority.runtime = protobuf_1.proto3;
authority.typeName = "protocol.authority";
authority.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "message", T: AccountId },
    { no: 2, name: "permission_name", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
exports.authority = authority;
/**
 * @generated from message protocol.Transaction
 */
class Transaction extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * only support size = 1,  repeated list here for muti-sig extension
         *
         * @generated from field: repeated bytes signature = 2;
         */
        this.signature = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Transaction().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Transaction().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Transaction().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Transaction, a, b);
    }
}
Transaction.runtime = protobuf_1.proto3;
Transaction.typeName = "protocol.Transaction";
Transaction.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "raw_data", kind: "message", T: Transaction_raw },
    { no: 2, name: "signature", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
]);
exports.Transaction = Transaction;
/**
 * @generated from message protocol.Transaction.Contract
 */
class Transaction_Contract extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: protocol.Transaction.Contract.ContractType type = 1;
         */
        this.type = Transaction_Contract_ContractType.AccountCreateContract;
        /**
         * @generated from field: bytes provider = 3;
         */
        this.provider = new Uint8Array(0);
        /**
         * @generated from field: bytes ContractName = 4;
         */
        this.ContractName = new Uint8Array(0);
        /**
         * @generated from field: int32 Permission_id = 5;
         */
        this.PermissionId = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Transaction_Contract().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Transaction_Contract().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Transaction_Contract().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Transaction_Contract, a, b);
    }
}
Transaction_Contract.runtime = protobuf_1.proto3;
Transaction_Contract.typeName = "protocol.Transaction.Contract";
Transaction_Contract.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: protobuf_1.proto3.getEnumType(Transaction_Contract_ContractType) },
    { no: 2, name: "parameter", kind: "message", T: protobuf_1.Any },
    { no: 3, name: "provider", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "ContractName", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "Permission_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
]);
exports.Transaction_Contract = Transaction_Contract;
/**
 * @generated from enum protocol.Transaction.Contract.ContractType
 */
var Transaction_Contract_ContractType;
(function (Transaction_Contract_ContractType) {
    /**
     * @generated from enum value: AccountCreateContract = 0;
     */
    Transaction_Contract_ContractType[Transaction_Contract_ContractType["AccountCreateContract"] = 0] = "AccountCreateContract";
    /**
     * @generated from enum value: TransferContract = 1;
     */
    Transaction_Contract_ContractType[Transaction_Contract_ContractType["TransferContract"] = 1] = "TransferContract";
    /**
     * @generated from enum value: TransferAssetContract = 2;
     */
    Transaction_Contract_ContractType[Transaction_Contract_ContractType["TransferAssetContract"] = 2] = "TransferAssetContract";
    /**
     * @generated from enum value: TriggerSmartContract = 31;
     */
    Transaction_Contract_ContractType[Transaction_Contract_ContractType["TriggerSmartContract"] = 31] = "TriggerSmartContract";
})(Transaction_Contract_ContractType = exports.Transaction_Contract_ContractType || (exports.Transaction_Contract_ContractType = {}));
// Retrieve enum metadata with: proto3.getEnumType(Transaction_Contract_ContractType)
protobuf_1.proto3.util.setEnumType(Transaction_Contract_ContractType, "protocol.Transaction.Contract.ContractType", [
    { no: 0, name: "AccountCreateContract" },
    { no: 1, name: "TransferContract" },
    { no: 2, name: "TransferAssetContract" },
    { no: 31, name: "TriggerSmartContract" },
]);
/**
 * @generated from message protocol.Transaction.raw
 */
class Transaction_raw extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bytes ref_block_bytes = 1;
         */
        this.refBlockBytes = new Uint8Array(0);
        /**
         * @generated from field: int64 ref_block_num = 3;
         */
        this.refBlockNum = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: bytes ref_block_hash = 4;
         */
        this.refBlockHash = new Uint8Array(0);
        /**
         * @generated from field: int64 expiration = 8;
         */
        this.expiration = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: repeated protocol.authority auths = 9;
         */
        this.auths = [];
        /**
         * data not used
         *
         * @generated from field: bytes data = 10;
         */
        this.data = new Uint8Array(0);
        /**
         * only support size = 1,  repeated list here for extension
         *
         * @generated from field: repeated protocol.Transaction.Contract contract = 11;
         */
        this.contract = [];
        /**
         * scripts not used
         *
         * @generated from field: bytes scripts = 12;
         */
        this.scripts = new Uint8Array(0);
        /**
         * @generated from field: int64 timestamp = 14;
         */
        this.timestamp = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: int64 fee_limit = 18;
         */
        this.feeLimit = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Transaction_raw().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Transaction_raw().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Transaction_raw().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Transaction_raw, a, b);
    }
}
Transaction_raw.runtime = protobuf_1.proto3;
Transaction_raw.typeName = "protocol.Transaction.raw";
Transaction_raw.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "ref_block_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "ref_block_num", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "ref_block_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 8, name: "expiration", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "auths", kind: "message", T: authority, repeated: true },
    { no: 10, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 11, name: "contract", kind: "message", T: Transaction_Contract, repeated: true },
    { no: 12, name: "scripts", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 14, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 18, name: "fee_limit", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
]);
exports.Transaction_raw = Transaction_raw;
