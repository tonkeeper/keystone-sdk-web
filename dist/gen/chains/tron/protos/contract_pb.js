"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts,import_extension="
// @generated from file chains/tron/protos/contract.proto (package protocol, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.TriggerSmartContract = exports.TransferAssetContract = exports.TransferContract = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message protocol.TransferContract
 */
class TransferContract extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bytes owner_address = 1;
         */
        this.ownerAddress = new Uint8Array(0);
        /**
         * @generated from field: bytes to_address = 2;
         */
        this.toAddress = new Uint8Array(0);
        /**
         * @generated from field: int64 amount = 3;
         */
        this.amount = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TransferContract().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TransferContract().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TransferContract().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TransferContract, a, b);
    }
}
TransferContract.runtime = protobuf_1.proto3;
TransferContract.typeName = "protocol.TransferContract";
TransferContract.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "owner_address", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "to_address", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "amount", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
]);
exports.TransferContract = TransferContract;
/**
 * @generated from message protocol.TransferAssetContract
 */
class TransferAssetContract extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * this field is token name before the proposal ALLOW_SAME_TOKEN_NAME is active, otherwise it is token id and token is should be in string format.
         *
         * @generated from field: bytes asset_name = 1;
         */
        this.assetName = new Uint8Array(0);
        /**
         * @generated from field: bytes owner_address = 2;
         */
        this.ownerAddress = new Uint8Array(0);
        /**
         * @generated from field: bytes to_address = 3;
         */
        this.toAddress = new Uint8Array(0);
        /**
         * @generated from field: int64 amount = 4;
         */
        this.amount = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TransferAssetContract().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TransferAssetContract().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TransferAssetContract().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TransferAssetContract, a, b);
    }
}
TransferAssetContract.runtime = protobuf_1.proto3;
TransferAssetContract.typeName = "protocol.TransferAssetContract";
TransferAssetContract.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "asset_name", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "owner_address", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "to_address", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "amount", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
]);
exports.TransferAssetContract = TransferAssetContract;
/**
 * @generated from message protocol.TriggerSmartContract
 */
class TriggerSmartContract extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bytes owner_address = 1;
         */
        this.ownerAddress = new Uint8Array(0);
        /**
         * @generated from field: bytes contract_address = 2;
         */
        this.contractAddress = new Uint8Array(0);
        /**
         * @generated from field: int64 call_value = 3;
         */
        this.callValue = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: bytes data = 4;
         */
        this.data = new Uint8Array(0);
        /**
         * @generated from field: int64 call_token_value = 5;
         */
        this.callTokenValue = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: int64 token_id = 6;
         */
        this.tokenId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TriggerSmartContract().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TriggerSmartContract().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TriggerSmartContract().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TriggerSmartContract, a, b);
    }
}
TriggerSmartContract.runtime = protobuf_1.proto3;
TriggerSmartContract.typeName = "protocol.TriggerSmartContract";
TriggerSmartContract.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "owner_address", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "contract_address", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "call_value", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "call_token_value", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "token_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
]);
exports.TriggerSmartContract = TriggerSmartContract;
