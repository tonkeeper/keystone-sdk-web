"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts,import_extension="
// @generated from file chains/keystone/protos/tron_transaction.proto (package protoc, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.TronTx = exports.Override = exports.LatestBlock = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message protoc.LatestBlock
 */
class LatestBlock extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string hash = 1;
         */
        this.hash = "";
        /**
         * @generated from field: int32 number = 2;
         */
        this.number = 0;
        /**
         * @generated from field: int64 timestamp = 3;
         */
        this.timestamp = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LatestBlock().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LatestBlock().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LatestBlock().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LatestBlock, a, b);
    }
}
LatestBlock.runtime = protobuf_1.proto3;
LatestBlock.typeName = "protoc.LatestBlock";
LatestBlock.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
]);
exports.LatestBlock = LatestBlock;
/**
 * @generated from message protoc.Override
 */
class Override extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string tokenShortName = 1;
         */
        this.tokenShortName = "";
        /**
         * @generated from field: string tokenFullName = 2;
         */
        this.tokenFullName = "";
        /**
         * @generated from field: int32 decimals = 3;
         */
        this.decimals = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Override().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Override().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Override().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Override, a, b);
    }
}
Override.runtime = protobuf_1.proto3;
Override.typeName = "protoc.Override";
Override.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "tokenShortName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "tokenFullName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "decimals", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
]);
exports.Override = Override;
/**
 * @generated from message protoc.TronTx
 */
class TronTx extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * required for TRC10 token, for example '1001090' for TRONONE
         *
         * @generated from field: string token = 1;
         */
        this.token = "";
        /**
         * required for TRC20 token
         *
         * @generated from field: string contractAddress = 2;
         */
        this.contractAddress = "";
        /**
         * @generated from field: string from = 3;
         */
        this.from = "";
        /**
         * @generated from field: string to = 4;
         */
        this.to = "";
        /**
         * @generated from field: string memo = 5;
         */
        this.memo = "";
        /**
         * @generated from field: string value = 6;
         */
        this.value = "";
        /**
         * @generated from field: int32 fee = 9;
         */
        this.fee = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TronTx().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TronTx().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TronTx().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TronTx, a, b);
    }
}
TronTx.runtime = protobuf_1.proto3;
TronTx.typeName = "protoc.TronTx";
TronTx.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "contractAddress", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "memo", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "latestBlock", kind: "message", T: LatestBlock },
    { no: 8, name: "override", kind: "message", T: Override },
    { no: 9, name: "fee", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
]);
exports.TronTx = TronTx;
