"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts,import_extension="
// @generated from file chains/keystone/protos/ltc_transaction.proto (package protoc, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.LtcTx = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const btc_transaction_pb_1 = require("../../../protos/btc_transaction_pb");
/**
 * @generated from message protoc.LtcTx
 */
class LtcTx extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * fee = outputs.size > 1 ? fee = sum(input.value) - sum(output.value) : fee
         *
         * @generated from field: int64 fee = 1;
         */
        this.fee = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: int32 dustThreshold = 2;
         */
        this.dustThreshold = 0;
        /**
         * @generated from field: string memo = 3;
         */
        this.memo = "";
        /**
         * @generated from field: repeated protoc.Input inputs = 4;
         */
        this.inputs = [];
        /**
         * @generated from field: repeated protoc.Output outputs = 5;
         */
        this.outputs = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LtcTx().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LtcTx().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LtcTx().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LtcTx, a, b);
    }
}
LtcTx.runtime = protobuf_1.proto3;
LtcTx.typeName = "protoc.LtcTx";
LtcTx.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "fee", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "dustThreshold", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "memo", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "inputs", kind: "message", T: btc_transaction_pb_1.Input, repeated: true },
    { no: 5, name: "outputs", kind: "message", T: btc_transaction_pb_1.Output, repeated: true },
]);
exports.LtcTx = LtcTx;
