"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts,import_extension="
// @generated from file protos/transaction.proto (package protoc, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignTransaction = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const tron_transaction_pb_1 = require("../chains/keystone/protos/tron_transaction_pb");
const bch_transaction_pb_1 = require("../chains/keystone/protos/bch_transaction_pb");
const dash_transaction_pb_1 = require("../chains/keystone/protos/dash_transaction_pb");
const ltc_transaction_pb_1 = require("../chains/keystone/protos/ltc_transaction_pb");
/**
 * @generated from message protoc.SignTransaction
 */
class SignTransaction extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string coinCode = 1;
         */
        this.coinCode = "";
        /**
         * @generated from field: string signId = 2;
         */
        this.signId = "";
        /**
         * @generated from field: string hdPath = 3;
         */
        this.hdPath = "";
        /**
         * @generated from field: int64 timestamp = 4;
         */
        this.timestamp = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: int32 decimal = 5;
         */
        this.decimal = 0;
        /**
         * @generated from oneof protoc.SignTransaction.Transaction
         */
        this.Transaction = { case: undefined };
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SignTransaction().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SignTransaction().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SignTransaction().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SignTransaction, a, b);
    }
}
SignTransaction.runtime = protobuf_1.proto3;
SignTransaction.typeName = "protoc.SignTransaction";
SignTransaction.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "coinCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "signId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "hdPath", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "decimal", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "tronTx", kind: "message", T: tron_transaction_pb_1.TronTx, oneof: "Transaction" },
    { no: 10, name: "bchTx", kind: "message", T: bch_transaction_pb_1.BchTx, oneof: "Transaction" },
    { no: 11, name: "dashTx", kind: "message", T: dash_transaction_pb_1.DashTx, oneof: "Transaction" },
    { no: 12, name: "ltcTx", kind: "message", T: ltc_transaction_pb_1.LtcTx, oneof: "Transaction" },
]);
exports.SignTransaction = SignTransaction;
