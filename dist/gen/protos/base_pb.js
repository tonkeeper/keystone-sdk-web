"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts,import_extension="
// @generated from file protos/base.proto (package protoc, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Base = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const payload_pb_1 = require("./payload_pb");
/**
 * @generated from message protoc.Base
 */
class Base extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: int32 version = 1;
         */
        this.version = 0;
        /**
         * @generated from field: string description = 2;
         */
        this.description = "";
        /**
         * @generated from oneof protoc.Base.Content
         */
        this.Content = { case: undefined };
        /**
         * @generated from field: string deviceType = 6;
         */
        this.deviceType = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Base().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Base().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Base().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Base, a, b);
    }
}
Base.runtime = protobuf_1.proto3;
Base.typeName = "protoc.Base";
Base.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "data", kind: "message", T: payload_pb_1.Payload },
    { no: 4, name: "hotVersion", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "Content" },
    { no: 5, name: "coldVersion", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "Content" },
    { no: 6, name: "deviceType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
exports.Base = Base;
