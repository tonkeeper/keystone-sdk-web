"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts,import_extension="
// @generated from file protos/btc_transaction.proto (package protoc, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Output = exports.utxo = exports.Input = exports.Omni = exports.BtcTx = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message protoc.BtcTx
 */
class BtcTx extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * fee = outputs.size > 1 ? fee = sum(input.value) - sum(output.value) : fee
         *
         * @generated from field: int64 fee = 1;
         */
        this.fee = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: int32 dustThreshold = 2;
         */
        this.dustThreshold = 0;
        /**
         * @generated from field: string memo = 3;
         */
        this.memo = "";
        /**
         * @generated from field: repeated protoc.Input inputs = 4;
         */
        this.inputs = [];
        /**
         * for normal btc transaction
         *
         * @generated from field: repeated protoc.Output outputs = 5;
         */
        this.outputs = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new BtcTx().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new BtcTx().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new BtcTx().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(BtcTx, a, b);
    }
}
BtcTx.runtime = protobuf_1.proto3;
BtcTx.typeName = "protoc.BtcTx";
BtcTx.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "fee", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "dustThreshold", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "memo", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "inputs", kind: "message", T: Input, repeated: true },
    { no: 5, name: "outputs", kind: "message", T: Output, repeated: true },
    { no: 6, name: "omni", kind: "message", T: Omni },
]);
exports.BtcTx = BtcTx;
/**
 * @generated from message protoc.Omni
 */
class Omni extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string to = 5;
         */
        this.to = "";
        /**
         * @generated from field: string changeAddress = 6;
         */
        this.changeAddress = "";
        /**
         * sat unit
         *
         * @generated from field: int64 omniAmount = 7;
         */
        this.omniAmount = protobuf_1.protoInt64.zero;
        /**
         * optional default 31 for usdt
         *
         * @generated from field: int32 propertyId = 8;
         */
        this.propertyId = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Omni().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Omni().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Omni().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Omni, a, b);
    }
}
Omni.runtime = protobuf_1.proto3;
Omni.typeName = "protoc.Omni";
Omni.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 5, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "changeAddress", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "omniAmount", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "propertyId", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
]);
exports.Omni = Omni;
/**
 * @generated from message protoc.Input
 */
class Input extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string hash = 1;
         */
        this.hash = "";
        /**
         * @generated from field: int32 index = 2;
         */
        this.index = 0;
        /**
         * @generated from field: string ownerKeyPath = 4;
         */
        this.ownerKeyPath = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Input().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Input().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Input().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Input, a, b);
    }
}
Input.runtime = protobuf_1.proto3;
Input.typeName = "protoc.Input";
Input.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "index", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "utxo", kind: "message", T: utxo },
    { no: 4, name: "ownerKeyPath", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
exports.Input = Input;
/**
 * @generated from message protoc.utxo
 */
class utxo extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string publicKey = 1;
         */
        this.publicKey = "";
        /**
         * @generated from field: string script = 2;
         */
        this.script = "";
        /**
         * @generated from field: int64 value = 3;
         */
        this.value = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new utxo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new utxo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new utxo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(utxo, a, b);
    }
}
utxo.runtime = protobuf_1.proto3;
utxo.typeName = "protoc.utxo";
utxo.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "publicKey", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "script", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "value", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
]);
exports.utxo = utxo;
/**
 * @generated from message protoc.Output
 */
class Output extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string address = 1;
         */
        this.address = "";
        /**
         * @generated from field: int64 value = 2;
         */
        this.value = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: bool isChange = 3;
         */
        this.isChange = false;
        /**
         * @generated from field: string changeAddressPath = 4;
         */
        this.changeAddressPath = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Output().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Output().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Output().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Output, a, b);
    }
}
Output.runtime = protobuf_1.proto3;
Output.typeName = "protoc.Output";
Output.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "isChange", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "changeAddressPath", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
exports.Output = Output;
